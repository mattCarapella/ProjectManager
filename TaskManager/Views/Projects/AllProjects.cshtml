@using TaskManager.Core
@using TaskManager.Core.Enums
@using static TaskManager.Core.Enums.Enums
@model PaginatedList<TaskManager.Models.Project>
@{ ViewData["Title"] = "All Projects"; }

<div class="main-container">
    <div class="container">
        <div class="row justify-content-center">
            <div class="col-xl-12 col-lg-12">
                <div class="page-content">
                    <div class="wrapper mb-2">
                        <div class="media">
                            <img class="header-img" alt="Image" src="~/images/projectA100.png" overflow="hidden" />
                            <span class="header-text pl-4 pt-2">All Projects</span>
                        </div>
                        <span class="mt-2">
                            @if ((await AuthorizationService.AuthorizeAsync(User, "RequireAdmin")).Succeeded)
                            {
                                <button class="btn btn-round-med" data-toggle="tooltip" data-title="Add a Project">
                                    <a asp-controller="Projects" asp-action="Create">
                                        <i class="material-icons btn-icon btn-icon-lg">add</i>
                                    </a>
                                </button>
                            }
                        </span>
                    </div>
                    <form asp-action="Index" method="get">
                        <div class="form-actions no-color">
                            <p>
                                <span class="pr-3">Search by name or description:</span>
                                <input type="text" class="search-field" name="SearchString" value="@ViewData["CurrentFilter"]" />
                                <button type="submit" class="btn btn-link">Search</button>
                                <a asp-action="Index" class="btn-link">Clear</a>
                            </p>
                        </div>
                    </form>
                    <table class="table table-bordered table-responsive mt-4">
                        <thead class="align-items-center">
                            <tr>
                                <th>
                                    <a class="index--sort-link"
                                       asp-action="Index"
                                       asp-route-sortOrder="@ViewData["NameSortParam"]"
                                       asp-route-currentFilter="@ViewData["CurrentFilter"]">
                                        Name
                                    </a>
                                </th>
                                <th>Description</th>
                                <th>
                                    <a class="index--sort-link"
                                       asp-action="Index"
                                       asp-route-sortOrder="@ViewData["OpenTicketSortParam"]"
                                       asp-route-currentFilter="@ViewData["CurrentFilter"]">
                                        Open Tickets
                                    </a>
                                </th>
                                <th>
                                    <a class="index--sort-link"
                                       asp-action="Index"
                                       asp-route-sortOrder="@ViewData["CreatedOnSortParam"]"
                                       asp-route-currentFilter="@ViewData["CurrentFilter"]">
                                        Created On
                                    </a>
                                </th>
                                <th>
                                    <a class="index--sort-link"
                                       asp-action="Index"
                                       asp-route-sortOrder="@ViewData["GoalDateSortParam"]"
                                       asp-route-currentFilter="@ViewData["CurrentFilter"]">
                                        Goal Date
                                    </a>
                                </th>
                                <th>Last Updated</th>
                                <th>Tag</th>
                                <th></th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model)
                            {
                                var ticketCount = item.Tickets.Where(t => t.Status != Enums.Status.COMPLETED).Count();
                                <tr>
                                    <td>
                                        <a asp-controller="Projects" asp-action="Details" asp-route-id="@item.Id">
                                            <strong>@Html.DisplayFor(modelItem => item.Name)</strong>
                                        </a>
                                    </td>
                                    <td>
                                        @if (@item.Description.Length > 200)
                                        {
                                            <p>@item.Description.Substring(0, 200)...</p>
                                        }
                                        else
                                        {
                                            @Html.DisplayFor(modelItem => item.Description)
                                        }
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => ticketCount)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.CreatedAt)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.GoalDate)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.UpdatedAt)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.Tag)
                                    </td>
                                    <td>
                                        <div class="button-group pt-1">
                                            @* @if ((await AuthorizationService.AuthorizeAsync(User, "EmployeeOnly")).Succeeded)
                                            {*@
                                                <button class="btn btn-round-sm mr-1">
                                                    <a asp-action="Details" asp-route-id="@item.Id" data-toggle="tooltip" data-title="Project details">
                                                        <i class="material-icons btn-icon btn-icon-sm">format_align_right</i>
                                                    </a>
                                                </button>
                                            @*}*@
                                            <button class="btn btn-round-sm mr-1">
                                                <a asp-action="Edit" asp-route-id="@item.Id" data-toggle="tooltip" data-title="Edit project">
                                                    <i class="material-icons btn-icon btn-icon-sm">create</i>
                                                </a>
                                            </button>
                                            <button class="btn btn-round-sm">
                                                <a asp-action="Delete" asp-route-id="@item.Id" data-toggle="tooltip" data-title="Delete project">
                                                    <i class="material-icons btn-icon btn-icon-sm">delete</i>
                                                </a>
                                            </button>
                                        </div>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                    @{
                        var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
                        var nextDisabled = !Model.HasNextPage ? "disabled" : "";
                    }
                    <a asp-action="AllProjects"
                       asp-route-sortOrder="@ViewData["CurrentSort"]"
                       asp-route-pageNumber="@(Model.PageIndex-1)" ;
                       asp-route-currentFilter="@ViewData["CurrentFilter"]"
                       class="btn btn-default @prevDisabled">
                        Previous
                    </a>
                    <a asp-action="AllProjects"
                       asp-route-sortOrder="@ViewData["CurrentSort"]"
                       asp-route-pageNumber="@(Model.PageIndex+1)" ;
                       asp-route-currentFilter="@ViewData["CurrentFilter"]"
                       class="btn btn-default @nextDisabled">
                        Next
                    </a>
                </div>
            </div>
        </div>
    </div>
</div>